<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="using:SubverseIM.ViewModels.Pages"
			 xmlns:vmx="using:SubverseIM.ViewModels.Components"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="SubverseIM.Views.Pages.MessagePageView"
			 x:DataType="vm:MessagePageViewModel">
	<Design.DataContext>
		<vm:MessagePageViewModel />
	</Design.DataContext>
	<UserControl.Styles>
		<Style Selector="ListBoxItem.offscreen,TextBlock.offscreen,Button.offscreen,TextBox.offscreen,ComboBox.offscreen,HyperlinkButton.offscreen">
			<Setter Property="AutomationProperties.IsOffscreenBehavior" Value="Offscreen"/>
		</Style>
		<Style Selector="SplitView.overlay">
			<Setter Property="DisplayMode" Value="Overlay"/>
		</Style>
		<Style Selector="SplitView.inline">
			<Setter Property="DisplayMode" Value="Inline"/>
		</Style>
		<Style Selector="DockPanel.dockTop">
			<Setter Property="DockPanel.Dock" Value="Top"/>
		</Style>
		<Style Selector="DockPanel.dockBottom">
			<Setter Property="DockPanel.Dock" Value="Bottom"/>
		</Style>
		<Style Selector="ListBox.dockTop">
			<Setter Property="ListBox.VerticalAlignment" Value="Top" />
		</Style>
		<Style Selector="ListBox.dockBottom">
			<Setter Property="ListBox.VerticalAlignment" Value="Bottom" />
		</Style>
	</UserControl.Styles>
	<SplitView x:Name="splitView"
		   IsPaneOpen="{Binding IsSidebarOpen}"
		   PanePlacement="Right"
           OpenPaneLength="300"
		   Classes.overlay="{Binding IsSidebarOverlay}"
		   Classes.inline="{Binding !IsSidebarOverlay}">
		<SplitView.Pane>
			<Border BorderThickness="2" BorderBrush="Black" IsVisible="{Binding IsSidebarOpen}">
				<DockPanel>
					<DockPanel DockPanel.Dock="Top">
						<Button DockPanel.Dock="Right"
								VerticalAlignment="Stretch"
								Command="{Binding ExportAllCommand}"
								AutomationProperties.Name="Export All Messages">
							<PathIcon Data="{StaticResource export_regular}" />
						</Button>
						<Button DockPanel.Dock="Right"
								VerticalAlignment="Stretch"
								Command="{Binding AddParticipantsCommand}"
								AutomationProperties.Name="Add Participants">
							<PathIcon Data="{StaticResource people_add_regular}" />
						</Button>
						<Label>Manage Conversation</Label>
					</DockPanel>
					<ListBox x:Name="contacts" SelectionMode="Single,Toggle" ItemsSource="{Binding ContactsList}">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="AutomationProperties.Name" Value="Participant"/>
								<Setter Property="Focusable" Value="False" />
							</Style>
						</ListBox.Styles>
						<ListBox.ItemTemplate>
							<DataTemplate>
								<DockPanel AutomationProperties.HelpText="{Binding DisplayName}">
									<Button DockPanel.Dock="Right"
										VerticalAlignment="Stretch"
										IsVisible="{Binding ShouldShowOptions}"
										Command="{Binding DeleteCommand}"
										CommandParameter="False"
										Background="DarkRed"
										AutomationProperties.Name="Remove Participant">
										<PathIcon Data="{StaticResource delete_regular}" />
									</Button>
									<Button DockPanel.Dock="Right"
										VerticalAlignment="Stretch"
										IsVisible="{Binding ShouldShowOptions}"
										Command="{Binding EditCommand}"
										AutomationProperties.Name="Save/Edit Contact">
										<PathIcon Data="{StaticResource edit_regular}" />
									</Button>
									<TextBlock Text="{Binding DisplayName}" TextWrapping="Wrap" />
								</DockPanel>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</DockPanel>
			</Border>
		</SplitView.Pane>
		<DockPanel>
			<DockPanel DockPanel.Dock="Top">
				<Button DockPanel.Dock="Right"
						VerticalAlignment="Stretch"
						Command="{Binding AddTopicCommand}"
						CommandParameter="{x:Null}"
						AutomationProperties.Name="New Topic">
					<PathIcon Data="{StaticResource comment_add_regular}" />
					<Classes.offscreen>
						<MultiBinding Converter="{x:Static BoolConverters.And}">
							<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
							<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
						</MultiBinding>
					</Classes.offscreen>
				</Button>
				<ComboBox x:Name="topicBox" DockPanel.Dock="Top"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						ItemsSource="{Binding TopicsList}"
						SelectedItem="{Binding SendMessageTopicName}"
						AutomationProperties.HelpText="Choose conversation topic.">
					<Classes.offscreen>
						<MultiBinding Converter="{x:Static BoolConverters.And}">
							<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
							<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
						</MultiBinding>
					</Classes.offscreen>
				</ComboBox>
			</DockPanel>
			<DockPanel>
				<Classes.dockTop>
					<MultiBinding Converter="{x:Static BoolConverters.And}">
						<Binding Path="!DataContext.IsAccessibilityEnabledAsync^" ElementName="splitView" />
						<Binding Path="!DataContext.MessageOrderFlagAsync^" ElementName="splitView" />
					</MultiBinding>
				</Classes.dockTop>
				<Classes.dockBottom>
					<MultiBinding Converter="{x:Static BoolConverters.Or}">
						<Binding Path="DataContext.IsAccessibilityEnabledAsync^" ElementName="splitView" />
						<Binding Path="DataContext.MessageOrderFlagAsync^" ElementName="splitView" />
					</MultiBinding>
				</Classes.dockBottom>
				<Button DockPanel.Dock="Right"
						VerticalAlignment="Stretch"
						Command="{Binding AttachFileCommand}"
						AutomationProperties.Name="Send File">
					<Classes.offscreen>
						<MultiBinding Converter="{x:Static BoolConverters.Or}">
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
								<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
							</MultiBinding>
							<Binding Path="IsDropDownOpen" ElementName="topicBox" />
						</MultiBinding>
					</Classes.offscreen>
					<PathIcon Data="{StaticResource document_add_regular}" />
				</Button>
				<Button DockPanel.Dock="Right"
						VerticalAlignment="Stretch"
						Command="{Binding SendCommand}"
						AutomationProperties.Name="Send Message">
					<Classes.offscreen>
						<MultiBinding Converter="{x:Static BoolConverters.Or}">
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
								<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
							</MultiBinding>
							<Binding Path="IsDropDownOpen" ElementName="topicBox" />
						</MultiBinding>
					</Classes.offscreen>
					<PathIcon Data="{StaticResource send_regular}" />
				</Button>
				<TextBox x:Name="messageBox"
						 HorizontalAlignment="Stretch"
						 VerticalAlignment="Stretch"
						 Watermark="Write a message..."
						 Text="{Binding SendMessageText}"
						 AcceptsReturn="{Binding !IsAccessibilityEnabledAsync^}"
						 AutomationProperties.Name="Message edit box"
						 AutomationProperties.HelpText="Write a message...">
					<TextBox.Styles>
						<Style Selector="TextBlock">
							<Setter Property="AutomationProperties.IsOffscreenBehavior" Value="Offscreen" />
						</Style>
					</TextBox.Styles>
					<Classes.offscreen>
						<MultiBinding Converter="{x:Static BoolConverters.Or}">
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
								<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
							</MultiBinding>
							<Binding Path="IsDropDownOpen" ElementName="topicBox" />
						</MultiBinding>
					</Classes.offscreen>
				</TextBox>
			</DockPanel>
			<Panel Background="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}">
				<ListBox x:Name="messages" SelectionMode="Single,Toggle" ItemsSource="{Binding MessageList}">
					<Classes.dockTop>
						<MultiBinding Converter="{x:Static BoolConverters.And}">
							<Binding Path="!DataContext.IsAccessibilityEnabledAsync^" ElementName="splitView" />
							<Binding Path="!DataContext.MessageOrderFlagAsync^" ElementName="splitView" />
						</MultiBinding>
					</Classes.dockTop>
					<Classes.dockBottom>
						<MultiBinding Converter="{x:Static BoolConverters.Or}">
							<Binding Path="DataContext.IsAccessibilityEnabledAsync^" ElementName="splitView" />
							<Binding Path="DataContext.MessageOrderFlagAsync^" ElementName="splitView" />
						</MultiBinding>
					</Classes.dockBottom>
					<ListBox.Styles>
						<Style Selector="ListBoxItem">
							<Setter Property="Focusable" Value="False" />
							<Setter Property="Classes.offscreen">
								<Setter.Value>
									<MultiBinding Converter="{x:Static BoolConverters.Or}">
										<MultiBinding Converter="{x:Static BoolConverters.And}">
											<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
											<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
										</MultiBinding>
										<Binding Path="IsDropDownOpen" ElementName="topicBox" />
									</MultiBinding>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.Styles>
					<ListBox.ItemTemplate>
						<DataTemplate>
							<DockPanel>
								<Button Background="DarkRed"
										DockPanel.Dock="{Binding OptionsAlignmentAsync^}"
										VerticalAlignment="Top"
										Margin="2"
										IsVisible="{Binding IsSelected}"
										Command="{Binding DeleteCommand}"
										AutomationProperties.Name="Delete Message">
									<Classes.offscreen>
										<MultiBinding Converter="{x:Static BoolConverters.Or}">
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
												<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
											</MultiBinding>
											<Binding Path="IsDropDownOpen" ElementName="topicBox" />
										</MultiBinding>
									</Classes.offscreen>
									<PathIcon Data="{StaticResource delete_regular}" />
								</Button>
								<Button DockPanel.Dock="{Binding OptionsAlignmentAsync^}"
										VerticalAlignment="Top"
										Margin="2"
										IsVisible="{Binding IsSelected}"
										Command="{Binding CopyCommand}"
										AutomationProperties.Name="Copy Message Text">
									<Classes.offscreen>
										<MultiBinding Converter="{x:Static BoolConverters.Or}">
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
												<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
											</MultiBinding>
											<Binding Path="IsDropDownOpen" ElementName="topicBox" />
										</MultiBinding>
									</Classes.offscreen>
									<PathIcon Data="{StaticResource clipboard_letter_regular}" />
								</Button>
								<DockPanel>
									<TextBlock
											TextWrapping="Wrap" DockPanel.Dock="Top"
											HorizontalAlignment="{Binding ContentAlignmentAsync^}"
											Text="{Binding FromHeading}"
											Margin="2">
										<Classes.offscreen>
											<MultiBinding Converter="{x:Static BoolConverters.Or}">
												<MultiBinding Converter="{x:Static BoolConverters.And}">
													<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
													<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
												</MultiBinding>
												<Binding Path="IsDropDownOpen" ElementName="topicBox" />
											</MultiBinding>
										</Classes.offscreen>
									</TextBlock>
									<TextBlock
										DockPanel.Dock="Top"
										VerticalAlignment="Top"
										HorizontalAlignment="{Binding ContentAlignmentAsync^}"
										Text="{Binding DateString}"
										FontSize="12"
										Margin="2">
										<Classes.offscreen>
											<MultiBinding Converter="{x:Static BoolConverters.Or}">
												<MultiBinding Converter="{x:Static BoolConverters.And}">
													<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
													<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
												</MultiBinding>
												<Binding Path="IsDropDownOpen" ElementName="topicBox" />
											</MultiBinding>
										</Classes.offscreen>
									</TextBlock>
									<TextBlock DockPanel.Dock="Bottom" TextWrapping="Wrap"
										IsVisible="{Binding IsGroupMessage}"
										HorizontalAlignment="{Binding ContentAlignmentAsync^}"
										Text="{Binding CcFooter}" Margin="2" FontSize="12" FontStyle="Italic">
										<Classes.offscreen>
											<MultiBinding Converter="{x:Static BoolConverters.Or}">
												<MultiBinding Converter="{x:Static BoolConverters.And}">
													<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
													<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
												</MultiBinding>
												<Binding Path="IsDropDownOpen" ElementName="topicBox" />
											</MultiBinding>
										</Classes.offscreen>
									</TextBlock>
									<ItemsControl DockPanel.Dock="Bottom" ItemsSource="{Binding Embeds}" HorizontalAlignment="{Binding ContentAlignmentAsync^}">
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<StackPanel Orientation="Vertical">
													<Image Source="{Binding FetchedBitmapAsync^, DataType={x:Type vmx:EmbedViewModel}}" Width="256" />
													<HyperlinkButton Padding="0" IsEnabled="True" HorizontalAlignment="{Binding $parent[DockPanel].DataContext.ContentAlignmentAsync^}"	NavigateUri="{Binding AbsoluteUri, DataType={x:Type vmx:EmbedViewModel}}">
														<Classes.offscreen>
															<MultiBinding Converter="{x:Static BoolConverters.Or}">
																<MultiBinding Converter="{x:Static BoolConverters.And}">
																	<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
																	<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
																</MultiBinding>
																<Binding Path="IsDropDownOpen" ElementName="topicBox" />
															</MultiBinding>
														</Classes.offscreen>
														<TextBlock Foreground="Aqua" TextWrapping="Wrap"
																Text="{Binding DisplayName, DataType={x:Type vmx:EmbedViewModel}}">
															<Classes.offscreen>
																<MultiBinding Converter="{x:Static BoolConverters.Or}">
																	<MultiBinding Converter="{x:Static BoolConverters.And}">
																		<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
																		<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
																	</MultiBinding>
																	<Binding Path="IsDropDownOpen" ElementName="topicBox" />
																</MultiBinding>
															</Classes.offscreen>
														</TextBlock>
													</HyperlinkButton>
												</StackPanel>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
									<Border Background="{Binding BubbleBrush}" Padding="5" BorderThickness="0" CornerRadius="10" HorizontalAlignment="{Binding ContentAlignmentAsync^}">
										<Panel Margin="2">
											<Classes.offscreen>
												<MultiBinding Converter="{x:Static BoolConverters.Or}">
													<MultiBinding Converter="{x:Static BoolConverters.And}">
														<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
														<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
													</MultiBinding>
													<Binding Path="IsDropDownOpen" ElementName="topicBox" />
												</MultiBinding>
											</Classes.offscreen>
											<TextBlock Text="{Binding ContentString}"
													   IsVisible="{Binding !DataContext.IsFormattingAllowedAsync^, ElementName='splitView'}"
													   Foreground="White" TextWrapping="Wrap" />
											<ItemsControl IsVisible="{Binding DataContext.IsFormattingAllowedAsync^, ElementName='splitView'}" ItemsSource="{Binding Content}">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Orientation="Vertical" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
												<ItemsControl.ItemTemplate>
													<DataTemplate>
														<ItemsControl ItemsSource="{Binding .}">
															<ItemsControl.ItemsPanel>
																<ItemsPanelTemplate>
																	<WrapPanel Orientation="Horizontal" />
																</ItemsPanelTemplate>
															</ItemsControl.ItemsPanel>
															<ItemsControl.ItemTemplate>
																<DataTemplate>
																	<Panel VerticalAlignment="Center">
																		<TextBlock Classes.emphasis="{Binding IsEmphasis, DataType={x:Type vmx:InlineContentViewModel}}}"
																			 Classes.italic="{Binding IsItalics, DataType={x:Type vmx:InlineContentViewModel}}}"
																			 Classes.underline="{Binding IsUnderline, DataType={x:Type vmx:InlineContentViewModel}}}"
																			 Classes.strike="{Binding IsStrikeout, DataType={x:Type vmx:InlineContentViewModel}}}"
																			 IsVisible="{Binding !IsCode, DataType={x:Type vmx:InlineContentViewModel}}}"
																			 Text="{Binding Content, DataType={x:Type vmx:InlineContentViewModel}}" TextAlignment="Start"
																			 Foreground="White" TextWrapping="Wrap"/>
																		<Border IsVisible="{Binding IsCode, DataType={x:Type vmx:InlineContentViewModel}}}"
																				Background="Black" BorderBrush="DimGray" BorderThickness="1" CornerRadius="2"
																				Padding="3">
																			<TextBlock Text="{Binding Content, DataType={x:Type vmx:InlineContentViewModel}}"
																					   Foreground="White" TextWrapping="Wrap"
																					   FontFamily="{StaticResource SourceCodePro}"/>
																		</Border>
																	</Panel>
																</DataTemplate>
															</ItemsControl.ItemTemplate>
															<ItemsControl.Styles>
																<Style Selector="TextBlock.emphasis">
																	<Setter Property="FontWeight" Value="Bold"/>
																</Style>
																<Style Selector="TextBlock.italic">
																	<Setter Property="FontStyle" Value="Italic"/>
																</Style>
																<Style Selector="TextBlock.underline">
																	<Setter Property="TextDecorations" Value="Underline"/>
																</Style>
																<Style Selector="TextBlock.strike">
																	<Setter Property="TextDecorations" Value="Strikethrough"/>
																</Style>
																<Style Selector="TextBlock.code">
																	<Setter Property="FontFamily" Value="SourceCodePro"/>
																</Style>
															</ItemsControl.Styles>
														</ItemsControl>
													</DataTemplate>
												</ItemsControl.ItemTemplate>
											</ItemsControl>
										</Panel>
									</Border>
								</DockPanel>
							</DockPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
				<TextBlock IsVisible="{Binding !MessageList.Count}"
						   HorizontalAlignment="Center"
						   VerticalAlignment="Center"
						   TextWrapping="Wrap"
						   TextAlignment="Center"
						   Margin="5" FontSize="16">
					<Classes.offscreen>
						<MultiBinding Converter="{x:Static BoolConverters.Or}">
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="DataContext.IsSidebarOpen" ElementName="splitView" />
								<Binding Path="DataContext.IsSidebarOverlay" ElementName="splitView" />
							</MultiBinding>
							<Binding Path="IsDropDownOpen" ElementName="topicBox" />
						</MultiBinding>
					</Classes.offscreen>
					This topic is empty. Send a message to get started!
				</TextBlock>
			</Panel>
		</DockPanel>
	</SplitView>
</UserControl>
