name: .NET CI Publish

on: 
  push:
    tags:
    - '*'

jobs:
  publish-app:
    name: SubverseIM.Android
    runs-on: self-hosted
    permissions:
      contents: write

    container: 
      image: garretech/android-sdk-image:36.0.0
      
    steps:
    - uses: actions/checkout@v4
      with: 
        submodules: 'recursive'
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          10.0.x
    - uses: actions/setup-node@v4
      with:
        node-version: 'latest'
    - name: Restore workloads
      run: |
        cd Avalonia && dotnet workload restore dirs.proj && cd ..
        dotnet workload restore SubverseIM.App/SubverseIM.Android/SubverseIM.Android.csproj
    - name: Build Avalonia (local)
      run: cd Avalonia && ./build.sh BuildToNuGetCache
    - name: Test SubverseIM.App
      run: dotnet test SubverseIM.App/SubverseIM.Headless/SubverseIM.Headless.csproj
    - name: Restore Android signing keys
      run: (echo ${{ secrets.KEYSTORE }} | base64 --decode) > SubverseIM.App/SubverseIM.Android/ChosenFewKey.keystore
    - name: Build & publish SubverseIM.Android
      run: dotnet publish SubverseIM.App/SubverseIM.Android/SubverseIM.Android.csproj --configuration Release --output /home/tc/publish/android -m:1 -p:AndroidPackageFormat=aab -p:AndroidKeyStore=true -p:AndroidSigningKeyStore=ChosenFewKey.keystore -p:AndroidSigningKeyAlias=ChosenFewKey -p:AndroidSigningStorePass=${{ secrets.KEYSTORE_PASSWORD }} -p:AndroidSigningKeyPass=${{ secrets.KEYSTORE_PASSWORD }}
    - name: Create new release
      id: gh_release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "/home/tc/publish/android/com.ChosenFewSoftware.SubverseIM-Signed.apk"
        generateReleaseNotes: true
    - name: Create release notes for Google Play
      run: "mkdir /home/tc/publish/android/whatsnew && (echo Full release notes are available at the link listed below: && echo ${{ steps.gh_release.outputs.html_url }}) > /home/tc/publish/android/whatsnew/whatsnew-en-US"
    - name: Publish to Google Play
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        packageName: com.ChosenFewSoftware.SubverseIM
        releaseFiles: "/home/tc/publish/android/com.ChosenFewSoftware.SubverseIM-Signed.aab"
        whatsNewDirectory: "/home/tc/publish/android/whatsnew"
        track: internal
  publish-web:
    name: SubverseIM.Bootstrapper
    runs-on: self-hosted
    permissions:
      contents: read

    container: 
      image: mcr.microsoft.com/dotnet/sdk:10.0
      
    steps:
    - uses: actions/checkout@v4
      with: 
        submodules: 'recursive'
    - name: Create publish directory
      run: |
        mkdir -p /home/tc/publish/web
        touch /home/tc/publish/web/app_offline.htm
    - name: Initial Web deployment
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_HOSTNAME }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftps
        security: strict
        local-dir: /home/tc/publish/web/
        server-dir: /subverse/
    - name: Cleanup initial Web deployment
      run: rm -f /home/tc/publish/web/*
    - name: Test SubverseIM.Bootstrapper
      run: dotnet test SubverseIM.Network/SubverseIM.Bootstrapper.Tests/SubverseIM.Bootstrapper.Tests.csproj
    - name: Publish SubverseIM.Bootstrapper
      run: dotnet publish SubverseIM.Network/SubverseIM.Bootstrapper/SubverseIM.Bootstrapper.csproj --configuration Release --runtime win-x64 --self-contained --output /home/tc/publish/web -p:PublishReadyToRun=true -m:1
    - name: Final Web deployment
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_HOSTNAME }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftps
        security: strict
        local-dir: /home/tc/publish/web/
        server-dir: /subverse/

